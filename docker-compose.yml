version: '3'

services:
  app:
    build:
      context: .
      dockerfile: dockerfile.node
    env_file:
      - .env
    restart: always
    ports:
      - $NODE_LOCAL_PORT:$NODE_DOCKER_PORT
    expose:
      - '3000'
    stdin_open: true
    tty: true
    volumes:
      - .:/app/
      - .:/app/node_modules
    environment:
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      - database

  database:
    build:
      context: .
      dockerfile: dockerfile.postgres
    env_file:
      - .env
    restart: always
    ports:
      - ${DB_PORT}:${POSTGRES_DOCKER_PORT}
    stdin_open: true
    tty: true
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgpersistencedata:/var/lib/postgresql/data
      - ./scripts/db_create.sql:/docker-entrypoint-initdb.d/db_create.sql
      - ./scripts/db_insert.sql:/docker-entrypoint-initdb.d/db_insert.sql

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    ports:
      - "8080:80" # Exponha a porta 80 do pgAdmin para a porta 8080 no host
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - database

volumes:
  pgpersistencedata:
  pgadmin_data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: './database'
